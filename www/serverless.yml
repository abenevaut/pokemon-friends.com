service: pkmn-friends

useDotenv: true

provider:
    stage: production
    name: aws
    region: eu-west-3
    runtime: provided.al2
    lambdaHashingVersion: 20201221
    apiGateway:
        shouldStartNameWithService: true
    environment:
        APP_NAME: pkmn-friends
        APP_ENV: ${opt:stage, self:provider.stage}
        APP_KEY: base64:oFzoAmKAfcPUcRCJNKkrMHNU/yF4xCJsk/KZ7qQWouw=
        APP_DEBUG: true
        APP_URL: https://www.pokemon-friends.com
        APP_TAG: 1.2.10
        APP_STORAGE: '/tmp/storage'
        LOG_CHANNEL: stderr
        DB_CONNECTION: mysql
        DB_HOST: pkmn-friends.cluster-ccwv2imsrlnk.eu-west-3.rds.amazonaws.com
        DB_PORT: 3306
        DB_DATABASE: ${opt:stage, self:provider.stage}
        DB_USERNAME: admin
        DB_PASSWORD: ''
        SESSION_DOMAIN: .pokemon-friends.com
        USE_CDN: true
        AWS_BUCKET: pkmn-friends-production-assets
        AWS_ACCESS_KEY_ID:
        AWS_SECRET_ACCESS_KEY:
        AWS_DEFAULT_REGION: eu-west-3

plugins:
    - ./vendor/bref/bref

package:
    exclude:
        - .tmp/**
        - node_modules/**
        - public/storage
        - public/app/**
        - public/css/**
        - public/fonts/**
        - public/images/**
        - public/js/**
        - public/mix-manifest.json
        - resources/fonts/**
        - resources/images/**
        - resources/js/**
        - resources/sass/**
        - storage/**
        - tests/**

functions:
    website:
        handler: public/index.php
        timeout: 28 # in seconds (API Gateway has a timeout of 29 seconds)
        layers:
            - ${bref:layer.php-74-fpm}
        events:
            - http: 'ANY /'
            - http: 'ANY /{proxy+}'
        vpc:
            securityGroupIds:
                - sg-038592ea383fa2cfd
            subnetIds:
                - subnet-7c784f07
    artisan:
        handler: artisan
        timeout: 120 # in seconds
        layers:
            - ${bref:layer.php-74}
            - ${bref:layer.console}
        vpc:
            securityGroupIds:
                - sg-038592ea383fa2cfd
            subnetIds:
                - subnet-7c784f07
#    scheduler:
#        handler: artisan
#        layers:
#            - ${bref:layer.php-74}
#            - ${bref:layer.console}
#        events:
#            - schedule:
#                rate: rate(1 minute)
#                input: '"schedule:run"'

resources:
    Resources:
        # The S3 bucket that stores the assets
        Assets:
            Type: AWS::S3::Bucket
            Properties:
                BucketName: ${opt:stage, self:service}-${opt:stage, self:provider.stage}-assets
        # The policy that makes the bucket publicly readable
        AssetsBucketPolicy:
            Type: AWS::S3::BucketPolicy
            Properties:
                Bucket: !Ref Assets # References the bucket we defined above
                PolicyDocument:
                    Statement:
                        - Effect: Allow
                          Principal: '*' # everyone
                          Action: 's3:GetObject' # to read
                          Resource: !Join ['/', [!GetAtt Assets.Arn, '*']]
